;;; autoloads --- automatically extracted autoloads
;;
;;; Code:

;; Tell Emacs to look for elisp files in this directory.  -- Install
(add-to-list 'load-path
              (or (file-name-directory load-file-name) (car load-path)))


;;;### (autoloads (install-list-packages install-directory-inplace
;;;;;;  install-buffer install-file) "install" "install.el" (21125
;;;;;;  41379 0 0))
;;; Generated autoloads from install.el

(autoload 'install-file "install" "\


\(fn FILE)" t nil)

(autoload 'install-buffer "install" "\
Install the current elisp buffer as a package.
The package is install in `install-home-dir', autoloads are added
to the `install-autoload-file' in that directory and the
`install-custom-file' is then updated to load these autoloads.

\(fn)" t nil)

(autoload 'install-directory-inplace "install" "\
Prepare and activate the current directory for use by Emacs.
Sets up the autoload files, activates them and byte-compiles if needed.

\(fn DIR)" t nil)

(autoload 'install-list-packages "install" "\
Show the installed packages.

\(fn)" t nil)

;;;***

;;;### (autoloads (python-mode run-python) "python" "python.el" (21125
;;;;;;  41886 0 0))
;;; Generated autoloads from python.el

(add-to-list 'auto-mode-alist (cons (purecopy "\\.py\\'") 'python-mode))

(add-to-list 'interpreter-mode-alist (cons (purecopy "python") 'python-mode))

(autoload 'run-python "python" "\
Run an inferior Python process.
Input and output via buffer named after
`python-shell-buffer-name'.  If there is a process already
running in that buffer, just switch to it.

With argument, allows you to define CMD so you can edit the
command used to call the interpreter and define DEDICATED, so a
dedicated process for the current buffer is open.  When numeric
prefix arg is other than 0 or 4 do not SHOW.

Runs the hook `inferior-python-mode-hook' (after the
`comint-mode-hook' is run).  (Type \\[describe-mode] in the
process buffer for a list of commands.)

\(fn CMD &optional DEDICATED SHOW)" t nil)

(autoload 'python-mode "python" "\
Major mode for editing Python files.

\\{python-mode-map}
Entry to this mode calls the value of `python-mode-hook'
if that value is non-nil.

\(fn)" t nil)

;;;***

;;;### (autoloads nil nil ("pdftools.el" "python-mode.el") (21240
;;;;;;  30296 911469 0))

;;;***

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; End:
;;; autoloads ends here
